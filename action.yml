name: cache-cargo-install-action
description: GitHub Action for cargo install with cache

inputs:
  tool:
    description: Crate to install
    required: true
  locked:
    description: Use --locked flag
    required: false
    default: 'true'
  git:
    description: >
      Install from the specified Git URL

      This currently requires one of 'tag' or 'rev' input option.
    required: false
  tag:
    description: Tag to use when installing from git
    required: false
  rev:
    description: Specific commit to use when installing from git
    required: false
  features:
    description: Comma-separated list of features to enable when installing the crate
    required: false
    default: ''
  no-default-features:
    description: Pass `--no-default-features` to `cargo install`
    required: false
    default: 'false'
  all-features:
    description: Pass `--all-features` to `cargo install`
    required: false
    default: 'false'

# Note:
# - inputs.* should be manually mapped to INPUT_* due to https://github.com/actions/runner/issues/665
# - Use GITHUB_*/RUNNER_* instead of github.*/runner.* due to https://github.com/actions/runner/issues/2185
runs:
  using: composite
  steps:
    - run: |
        set -eu
        if ! command -v bash >/dev/null; then
          if grep -Eq '^ID=alpine' /etc/os-release; then
            printf '::group::Install packages required for cache-cargo-install-action (bash)\n'
            # NB: sync with apk_install in pre.sh
            if command -v sudo >/dev/null; then
              sudo apk --no-cache add bash
            elif command -v doas >/dev/null; then
              doas apk --no-cache add bash
            else
              apk --no-cache add bash
            fi
            printf '::endgroup::\n'
          else
            printf '::error::cache-cargo-install-action requires bash\n'
            exit 1
          fi
        fi
      shell: sh
      if: runner.os == 'Linux'
    - name: Pre Cache
      id: pre
      run: bash --noprofile --norc "${GITHUB_ACTION_PATH:?}/pre.sh"
      shell: bash
      env:
        INPUT_TOOL: ${{ inputs.tool }}
        INPUT_LOCKED: ${{ inputs.locked }}
        INPUT_GIT: ${{ inputs.git }}
        INPUT_TAG: ${{ inputs.tag }}
        INPUT_REV: ${{ inputs.rev }}
        INPUT_FEATURES: ${{ inputs.features }}
        INPUT_NO_DEFAULT_FEATURES: ${{ inputs.no-default-features }}
        INPUT_ALL_FEATURES: ${{ inputs.all-features }}
        ACTION_USER_AGENT: ${{ github.action_repository }} (${{ github.action_ref }})
    - name: Restore Cache
      id: cache
      uses: actions/cache@v4
      with:
        path: ${{ steps.pre.outputs.path }}
        key: ${{ steps.pre.outputs.key }}
    - name: Install ${{ inputs.tool }}
      run: |
        export CARGO_NET_RETRY=10
        # shellcheck disable=SC2206
        args=(-f "${{ steps.pre.outputs.tool }}" --root "${RUNNER_TOOL_CACHE}/${{ steps.pre.outputs.tool }}" ${{ steps.pre.outputs.locked }} ${{ steps.pre.outputs.features_flag }} ${{ steps.pre.outputs.no_default_features_flag }} ${{ steps.pre.outputs.all_features_flag }})
        if [[ -n "${{ steps.pre.outputs.git }}" ]]; then
          if [[ -n "${{ steps.pre.outputs.tag }}" ]]; then
            (
              set -x
              cargo install "${args[@]}" --git "${{ steps.pre.outputs.git }}" --tag "${{ steps.pre.outputs.tag }}"
            )
          else
            (
              set -x
              cargo install "${args[@]}" --git "${{ steps.pre.outputs.git }}" --rev "${{ steps.pre.outputs.rev }}"
            )
          fi
        else
          (
            set -x
            cargo install "${args[@]}" --version "${{ steps.pre.outputs.version }}"
          )
        fi
      shell: bash
      if: steps.cache.outputs.cache-hit != 'true'
